{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\Compress.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, message, Upload } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst props = {\n  name: \"file\",\n  action: \"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\",\n  headers: {\n    authorization: \"authorization-text\"\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n};\nconst Compress = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    setUploading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/compress\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const {\n        compressedFile,\n        compressionRatio\n      } = response.data;\n      const url = `http://localhost:5000/${compressedFile}`;\n      setDownloadLink(url);\n      setCompressionRatio(compressionRatio);\n      setUploading(false);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleDownload = () => {\n    const link = document.createElement(\"a\");\n    link.href = downloadLink;\n    link.download = \"convert_audio.m4a\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Upload, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this),\n        children: \"Click to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: uploading ? \"Uploading...\" : \"Upload and Compress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), compressionRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Compression Ratio: \", compressionRatio, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Converted Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Compress, \"gX4s8zEHGIknCLatMS7WJnMcJCY=\");\n_c = Compress;\nexport default Compress;\nvar _c;\n$RefreshReg$(_c, \"Compress\");","map":{"version":3,"names":["axios","useState","UploadOutlined","Button","message","Upload","jsxDEV","_jsxDEV","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","Compress","_s","setFile","downloadLink","setDownloadLink","compressionRatio","setCompressionRatio","uploading","setUploading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","compressedFile","data","url","handleDownload","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/Compress.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, message, Upload } from \"antd\";\r\nconst props = {\r\n  name: \"file\",\r\n  action: \"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    \r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\nconst Compress = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadLink, setDownloadLink] = useState(\"\");\r\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n\r\n    setUploading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/compress\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const { compressedFile, compressionRatio } = response.data;\r\n      const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n      setDownloadLink(url);\r\n      setCompressionRatio(compressionRatio);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = downloadLink;\r\n    link.download = \"convert_audio.m4a\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  return (\r\n    <div className=\"wrap\">\r\n      <h2>Compress</h2>\r\n      {/* <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} /> */}\r\n      <Upload {...props}>\r\n        <Button icon={<UploadOutlined /> } >Click to Upload</Button>\r\n      </Upload>\r\n\r\n      <button onClick={handleUpload}>\r\n        {uploading ? \"Uploading...\" : \"Upload and Compress\"}\r\n      </button>\r\n      {compressionRatio && (\r\n        <div>\r\n          <p>Compression Ratio: {compressionRatio}%</p>\r\n        </div>\r\n      )}\r\n\r\n      {downloadLink && (\r\n        <div>\r\n          <button onClick={handleDownload}>Download Converted Audio</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}