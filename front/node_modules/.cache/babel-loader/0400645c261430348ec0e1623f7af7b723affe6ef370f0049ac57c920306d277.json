{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\FileSelectComponent.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { Spin } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSelectComponent = ({\n  addRecord\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [bitRate, setBitRate] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(true);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const options = [{\n    label: \"Select audio compression bitrate\"\n  }, {\n    label: \"64k\",\n    value: \"64k\"\n  }, {\n    label: \"128k\",\n    value: \"128k\"\n  }, {\n    label: \"256k\",\n    value: \"256k\"\n  }];\n  const getBitrate = e => {\n    setBitRate(e.target.value);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    formData.append(\"bitrate\", bitRate);\n    setUploading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/compress\", formData);\n      console.log(response.data);\n      const {\n        compressedFile,\n        compressionRatio,\n        outputFileSize\n      } = response.data;\n      const url = `http://localhost:5000/${compressedFile}`;\n      setDownloadLink(url);\n      setCompressionRatio(compressionRatio);\n      setUploading(false);\n      addRecord({\n        fileName: file.name,\n        compressionRatio: compressionRatio,\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\n        outputFileSize: outputFileSize\n      });\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileToCompress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBtn\",\n      children: uploading ? /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"upl\",\n        onClick: handleUpload,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bitRate\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: bitRate,\n        onChange: e => getBitrate(e),\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rationDown\",\n      children: [compressionRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratio\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Compression Ratio: \", compressionRatio, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audioPreview\",\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: downloadLink,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), \"Your browser does not support the audio tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(FileSelectComponent, \"1pUCuPDTVGQUzGSdRyQfzbyFyaI=\");\n_c = FileSelectComponent;\nexport default FileSelectComponent;\nvar _c;\n$RefreshReg$(_c, \"FileSelectComponent\");","map":{"version":3,"names":["axios","useState","Spin","jsxDEV","_jsxDEV","FileSelectComponent","addRecord","_s","file","setFile","downloadLink","setDownloadLink","compressionRatio","setCompressionRatio","uploading","setUploading","bitRate","setBitRate","isDisabled","setIsDisabled","handleFileChange","e","target","files","options","label","value","getBitrate","handleUpload","alert","formData","FormData","append","response","post","console","log","data","compressedFile","outputFileSize","url","fileName","name","inputFileSize","size","toFixed","error","className","children","type","accept","onChange","_jsxFileName","lineNumber","columnNumber","tip","class","onClick","map","option","controls","src","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/FileSelectComponent.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst FileSelectComponent = ({ addRecord }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadLink, setDownloadLink] = useState(\"\");\r\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bitRate, setBitRate] = useState(\"\");\r\n   const [isDisabled, setIsDisabled] = useState(true);\r\n   \r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const options = [\r\n    { label: \"Select audio compression bitrate\" },\r\n    { label: \"64k\", value: \"64k\" },\r\n    { label: \"128k\", value: \"128k\" },\r\n    { label: \"256k\", value: \"256k\" },\r\n  ];\r\n\r\n  const getBitrate = (e) => {\r\n    setBitRate(e.target.value);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n    formData.append(\"bitrate\", bitRate);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/compress\",\r\n        formData\r\n      );\r\n\r\n      console.log(response.data);\r\n\r\n      const { compressedFile, compressionRatio, outputFileSize } =\r\n        response.data;\r\n      const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n      setDownloadLink(url);\r\n      setCompressionRatio(compressionRatio);\r\n      setUploading(false);\r\n\r\n      addRecord({\r\n        fileName: file.name,\r\n        compressionRatio: compressionRatio,\r\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\r\n        outputFileSize: outputFileSize,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fileToCompress\">\r\n      <div className=\"custom-file-upload\">\r\n        <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n      </div>\r\n      <div className=\"uploadBtn\">\r\n        {uploading ? (\r\n          <Spin tip=\"Loading\" size=\"large\"></Spin>\r\n        ) : (\r\n          <button class=\"upl\" onClick={handleUpload}>\r\n            Convert\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"bitRate\">\r\n        <select value={bitRate} onChange={(e) => getBitrate(e)}>\r\n          {options.map((option) => (\r\n            <option value={option.value}>{option.label}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"rationDown\">\r\n        {compressionRatio && (\r\n          <div className=\"ratio\">\r\n            <p>Compression Ratio: {compressionRatio}%</p>\r\n          </div>\r\n        )}\r\n        {downloadLink && (\r\n          <div className=\"audioPreview\">\r\n            <audio controls>\r\n              <source src={downloadLink} type=\"audio/mpeg\" />\r\n              Your browser does not support the audio tag.\r\n            </audio>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileSelectComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}