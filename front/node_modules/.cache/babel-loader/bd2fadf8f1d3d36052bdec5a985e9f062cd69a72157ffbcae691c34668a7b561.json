{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\FileSelectComponent.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { Spin } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSelectComponent = ({\n  addRecord\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const history = useHistory();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    setUploading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/compress\", formData);\n      const {\n        compressedFile,\n        compressionRatio,\n        outputFileSize\n      } = response.data;\n      const url = `http://localhost:5000/${compressedFile}`;\n      setDownloadLink(url);\n      setCompressionRatio(compressionRatio);\n      setUploading(false);\n      addRecord({\n        fileName: file.name,\n        compressionRatio: compressionRatio,\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\n        outputFileSize: outputFileSize\n      });\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (downloadLink) {\n      // Save the current state in sessionStorage\n      sessionStorage.setItem(\"fileCompressState\", JSON.stringify({\n        file: file,\n        downloadLink: downloadLink,\n        compressionRatio: compressionRatio\n      }));\n      const link = document.createElement(\"a\");\n      link.href = downloadLink;\n      link.download = \"\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      alert(\"No file available to download.\");\n    }\n\n    // if (downloadLink) {\n    //   const link = document.createElement(\"a\");\n    //   link.href = downloadLink;\n    //   link.download = \"\";\n    //   document.body.appendChild(link);\n    //   link.click();\n    //   document.body.removeChild(link);\n    // } else {\n    //   alert(\"No file available to download.\");\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileToCompress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBtn\",\n      children: uploading ? /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"upl\",\n        onClick: handleUpload,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rationDown\",\n      children: [compressionRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratio\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Compression Ratio: \", compressionRatio, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"downloadBtn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(FileSelectComponent, \"fpmbt4PddHS90tYCbZ7PF4HC3AY=\", false, function () {\n  return [useHistory];\n});\n_c = FileSelectComponent;\nexport default FileSelectComponent;\nvar _c;\n$RefreshReg$(_c, \"FileSelectComponent\");","map":{"version":3,"names":["axios","useState","Spin","useHistory","jsxDEV","_jsxDEV","FileSelectComponent","addRecord","_s","file","setFile","downloadLink","setDownloadLink","compressionRatio","setCompressionRatio","uploading","setUploading","history","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","compressedFile","outputFileSize","data","url","fileName","name","inputFileSize","size","toFixed","error","console","handleDownload","sessionStorage","setItem","JSON","stringify","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","type","accept","onChange","_jsxFileName","lineNumber","columnNumber","tip","class","onClick","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/FileSelectComponent.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Spin } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst FileSelectComponent = ({ addRecord }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadLink, setDownloadLink] = useState(\"\");\r\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n const history = useHistory(); \r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/compress\",\r\n        formData\r\n      );\r\n\r\n      const { compressedFile, compressionRatio, outputFileSize } =\r\n        response.data;\r\n      const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n      setDownloadLink(url);\r\n      setCompressionRatio(compressionRatio);\r\n      setUploading(false);\r\n\r\n      addRecord({\r\n        fileName: file.name,\r\n        compressionRatio: compressionRatio,\r\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\r\n        outputFileSize: outputFileSize,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (downloadLink) {\r\n      // Save the current state in sessionStorage\r\n      sessionStorage.setItem(\r\n        \"fileCompressState\",\r\n        JSON.stringify({\r\n          file: file,\r\n          downloadLink: downloadLink,\r\n          compressionRatio: compressionRatio,\r\n        })\r\n      );\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadLink;\r\n      link.download = \"\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      alert(\"No file available to download.\");\r\n    }\r\n\r\n    // if (downloadLink) {\r\n    //   const link = document.createElement(\"a\");\r\n    //   link.href = downloadLink;\r\n    //   link.download = \"\";\r\n    //   document.body.appendChild(link);\r\n    //   link.click();\r\n    //   document.body.removeChild(link);\r\n    // } else {\r\n    //   alert(\"No file available to download.\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fileToCompress\">\r\n      <div className=\"custom-file-upload\">\r\n        <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n      </div>\r\n      <div className=\"uploadBtn\">\r\n        {uploading ? (\r\n          <Spin tip=\"Loading\" size=\"large\"></Spin>\r\n        ) : (\r\n          <button class=\"upl\" onClick={handleUpload}>\r\n            Convert\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"rationDown\">\r\n        {compressionRatio && (\r\n          <div className=\"ratio\">\r\n            <p>Compression Ratio: {compressionRatio}%</p>\r\n          </div>\r\n        )}\r\n\r\n        {downloadLink && (\r\n          <div className=\"downloadBtn\">\r\n            <button onClick={handleDownload}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileSelectComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}