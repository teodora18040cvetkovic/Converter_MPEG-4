{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\FileSelectComponent.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { Progress } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSelectComponent = ({\n  addRecord\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const options = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.round(loaded * 100 / total);\n      setUploadProgress(percentage); // Update upload progress\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    setUploading(true);\n    setUploadProgress(0);\n    try {\n      const response = await axios.post(\"http://localhost:5000/compress\", formData, options, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"API Response:\", response.data);\n      setUploadProgress(100);\n      const {\n        compressedFile,\n        compressionRatio,\n        outputFileSize\n      } = response.data;\n      const url = `http://localhost:5000/${compressedFile}`;\n      setDownloadLink(url);\n      setCompressionRatio(compressionRatio);\n      setUploading(false);\n      addRecord({\n        fileName: file.name,\n        compressionRatio: compressionRatio,\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\n        outputFileSize: outputFileSize\n      });\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleDownload = () => {\n    if (downloadLink) {\n      const link = document.createElement(\"a\");\n      link.href = downloadLink;\n      link.download = \"\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      alert(\"No file available to download.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileToCompress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBtn\",\n      children: uploading ? /*#__PURE__*/_jsxDEV(Progress, {\n        precent: uploadProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"upl\",\n        onClick: handleUpload,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compRat\",\n      children: compressionRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratio\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Compression Ratio: \", compressionRatio, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"downloadBtn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Converted Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(FileSelectComponent, \"/9gZ9fIkwz3WDC0rcSG+gfqoYNk=\");\n_c = FileSelectComponent;\nexport default FileSelectComponent;\nvar _c;\n$RefreshReg$(_c, \"FileSelectComponent\");","map":{"version":3,"names":["axios","useState","Progress","jsxDEV","_jsxDEV","FileSelectComponent","addRecord","_s","file","setFile","downloadLink","setDownloadLink","compressionRatio","setCompressionRatio","uploading","setUploading","uploadProgress","setUploadProgress","handleFileChange","e","target","files","options","onUploadProgress","progressEvent","loaded","total","percentage","Math","round","handleUpload","alert","formData","FormData","append","response","post","headers","console","log","data","compressedFile","outputFileSize","url","fileName","name","inputFileSize","size","toFixed","error","handleDownload","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","type","accept","onChange","_jsxFileName","lineNumber","columnNumber","precent","class","onClick","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/FileSelectComponent.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Progress } from \"antd\";\r\n\r\nconst FileSelectComponent = ({ addRecord }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadLink, setDownloadLink] = useState(\"\");\r\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const options = {\r\n    onUploadProgress: (progressEvent) => {\r\n      const { loaded, total } = progressEvent;\r\n      const percentage = Math.round((loaded * 100) / total);\r\n      setUploadProgress(percentage); // Update upload progress\r\n    },\r\n  };\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n\r\n    setUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/compress\",\r\n        formData,\r\n        options,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"API Response:\", response.data);\r\n      setUploadProgress(100);\r\n      const { compressedFile, compressionRatio, outputFileSize } =\r\n        response.data;\r\n      const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n      setDownloadLink(url);\r\n      setCompressionRatio(compressionRatio);\r\n      setUploading(false);\r\n\r\n      addRecord({\r\n        fileName: file.name,\r\n        compressionRatio: compressionRatio,\r\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\r\n        outputFileSize: outputFileSize,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (downloadLink) {\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadLink;\r\n      link.download = \"\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      alert(\"No file available to download.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"fileToCompress\">\r\n      <div className=\"custom-file-upload\">\r\n        <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n      </div>\r\n\r\n      <div className=\"uploadBtn\">\r\n        {uploading ? (\r\n          <Progress precent={uploadProgress} />\r\n        ) : (\r\n          <button class=\"upl\" onClick={handleUpload}>\r\n            Convert\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"compRat\">\r\n        {compressionRatio && (\r\n          <div className=\"ratio\">\r\n            <p>Compression Ratio: {compressionRatio}%</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {downloadLink && (\r\n        <div className=\"downloadBtn\">\r\n          <button onClick={handleDownload}>Download Converted Audio</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileSelectComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}