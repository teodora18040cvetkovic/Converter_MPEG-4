{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\Compress.js\";\n//import axios from \"axios\";\n//import { useState } from \"react\";\nimport \"./style.css\";\n//import TableComponent from \"./TableComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compress = () => {\n  // const [file, setFile] = useState(null);\n  // const [downloadLink, setDownloadLink] = useState(\"\");\n  // const [compressionRatio, setCompressionRatio] = useState(\"\");\n  // const [uploading, setUploading] = useState(false);\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleUpload = async () => {\n  //   if (!file) {\n  //     alert(\"Please select a file first.\");\n  //     return;\n  //   }\n\n  //   const formData = new FormData();\n  //   formData.append(\"audio\", file);\n\n  //   setUploading(true);\n  //   try {\n  //     const response = await axios.post(\n  //       \"http://localhost:5000/compress\",\n  //       formData,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"multipart/form-data\",\n  //         },\n  //       }\n  //     );\n  //     console.log(\"API Response:\", response.data);\n\n  //     //const { compressedFile, compressionRatio } = response.data;\n\n  //     const { compressedFile, compressionRatio } = response.data;\n  //     const url = `http://localhost:5000/${compressedFile}`;\n\n  //     setDownloadLink(url);\n  //     setCompressionRatio(compressionRatio);\n  //     setUploading(false);\n  //   } catch (error) {\n  //     console.error(\"Error uploading file:\", error);\n  //   }\n  // };\n\n  // const handleDownload = () => {\n  //   if (downloadLink) {\n  //     const link = document.createElement(\"a\");\n  //     link.href = downloadLink;\n  //     link.download = \"\";\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } else {\n  //     alert(\"No file available to download.\");\n  //   }\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compresComp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title1\",\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title2\",\n        children: \"Choose a files to convert to MPEG-4 audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileSelectComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = Compress;\nexport default Compress;\nvar _c;\n$RefreshReg$(_c, \"Compress\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Compress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","FileSelectComponent","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/Compress.js"],"sourcesContent":["//import axios from \"axios\";\r\n//import { useState } from \"react\";\r\nimport \"./style.css\";\r\n//import TableComponent from \"./TableComponent\";\r\n\r\nconst Compress = () => {\r\n  // const [file, setFile] = useState(null);\r\n  // const [downloadLink, setDownloadLink] = useState(\"\");\r\n  // const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  // const [uploading, setUploading] = useState(false);\r\n\r\n  // const handleFileChange = (e) => {\r\n  //   setFile(e.target.files[0]);\r\n  // };\r\n\r\n  // const handleUpload = async () => {\r\n  //   if (!file) {\r\n  //     alert(\"Please select a file first.\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"audio\", file);\r\n\r\n  //   setUploading(true);\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       \"http://localhost:5000/compress\",\r\n  //       formData,\r\n  //       {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"multipart/form-data\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     console.log(\"API Response:\", response.data);\r\n\r\n  //     //const { compressedFile, compressionRatio } = response.data;\r\n\r\n  //     const { compressedFile, compressionRatio } = response.data;\r\n  //     const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n  //     setDownloadLink(url);\r\n  //     setCompressionRatio(compressionRatio);\r\n  //     setUploading(false);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error uploading file:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleDownload = () => {\r\n  //   if (downloadLink) {\r\n  //     const link = document.createElement(\"a\");\r\n  //     link.href = downloadLink;\r\n  //     link.download = \"\";\r\n  //     document.body.appendChild(link);\r\n  //     link.click();\r\n  //     document.body.removeChild(link);\r\n  //   } else {\r\n  //     alert(\"No file available to download.\");\r\n  //   }\r\n  // };\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"compresComp\">\r\n        <div className=\"title1\">Convert</div>\r\n        <div className=\"title2\">Choose a files to convert to MPEG-4 audio</div>\r\n        <FileSelectComponent></FileSelectComponent>\r\n        {/* <div className=\"fileToCompress\">\r\n          <div className=\"custom-file-upload\">\r\n            <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n          </div>\r\n          <div className=\"uploadBtn\">\r\n            <button onClick={handleUpload}>\r\n              {uploading ? \"Uploading...\" : \"Convert\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"compRat\">\r\n            {compressionRatio && (\r\n              <div className=\"ratio\">\r\n                <p>Compression Ratio: {compressionRatio}%</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {downloadLink && (\r\n            <div className=\"downloadBtn\">\r\n              <button onClick={handleDownload}>Download Converted Audio</button>\r\n            </div>\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compress;\r\n"],"mappings":";AAAA;AACA;AACA,OAAO,aAAa;AACpB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACED,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBH,OAAA;MAAKE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BH,OAAA;QAAKE,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCP,OAAA;QAAKE,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvEP,OAAA,CAACQ,mBAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuBxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAxFIR,QAAQ;AA0Fd,eAAeA,QAAQ;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}