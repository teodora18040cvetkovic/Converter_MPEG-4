{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\TableComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'module';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = ({\n  records,\n  loading,\n  error\n}) => {\n  _s();\n  useEffect(() => {\n    const savedRecords = JSON.parse(sessionStorage.getItem(\"compressionRecords\"));\n    if (savedRecords) {\n      // Assuming there's a way to set records in the parent component\n      // For example, you could have a setRecords function passed as a prop\n      setRecords(savedRecords);\n    }\n  }, []);\n\n  // Save records to sessionStorage whenever they change\n  useEffect(() => {\n    sessionStorage.setItem(\"compressionRecords\", JSON.stringify(records));\n  }, [records]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableComp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title3\",\n      children: \"Compression Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Compression Ratio (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Input File Size (MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Compressed File Size (MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.compressionRatio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.inputFileSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.outputFileSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","TableComponent","records","loading","error","_s","savedRecords","JSON","parse","sessionStorage","getItem","setRecords","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","index","compressionRatio","inputFileSize","outputFileSize","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/TableComponent.js"],"sourcesContent":["import {useEffect} from 'module';\r\nimport \"./style.css\";\r\nconst TableComponent = ({ records, loading, error }) => {\r\n   useEffect(() => {\r\n     const savedRecords = JSON.parse(\r\n       sessionStorage.getItem(\"compressionRecords\")\r\n     );\r\n     if (savedRecords) {\r\n       // Assuming there's a way to set records in the parent component\r\n       // For example, you could have a setRecords function passed as a prop\r\n       setRecords(savedRecords);\r\n     }\r\n   }, []);\r\n\r\n   // Save records to sessionStorage whenever they change\r\n   useEffect(() => {\r\n     sessionStorage.setItem(\"compressionRecords\", JSON.stringify(records));\r\n   }, [records]);\r\n\r\n  return (\r\n    <div className=\"tableComp\">\r\n      <div className=\"title3\">Compression Records</div>{\" \"}\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      <div className=\"records\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>File Name</th>\r\n              <th>Compression Ratio (%)</th>\r\n              <th>Input File Size (MB)</th>\r\n              <th>Compressed File Size (MB)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map((record, index) => (\r\n              <tr key={index}>\r\n                <td>{record.fileName}</td>\r\n                <td>{record.compressionRatio}</td>\r\n                <td>{record.inputFileSize}</td>\r\n                <td>{record.outputFileSize}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TableComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}