{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\FileSelectComponent.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { Spin } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Upload } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSelectComponent = ({\n  addRecord\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const props = {\n    action: \"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\",\n    onChange({\n      file,\n      fileList\n    }) {\n      if (file.status !== \"uploading\") {\n        console.log(file, fileList);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    setUploading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/compress\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"API Response:\", response.data);\n\n      //const { compressedFile, compressionRatio } = response.data;\n\n      const {\n        compressedFile,\n        compressionRatio,\n        outputFileSize\n      } = response.data;\n      const url = `http://localhost:5000/${compressedFile}`;\n      setDownloadLink(url);\n      setCompressionRatio(compressionRatio);\n      setUploading(false);\n      addRecord({\n        fileName: file.name,\n        compressionRatio: compressionRatio,\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\n        outputFileSize: outputFileSize\n      });\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleDownload = () => {\n    if (downloadLink) {\n      const link = document.createElement(\"a\");\n      link.href = downloadLink;\n      link.download = \"\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      alert(\"No file available to download.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileToCompress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBtn\",\n      children: uploading ? /*#__PURE__*/_jsxDEV(Upload, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"\\\"Convert\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compRat\",\n      children: compressionRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratio\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Compression Ratio: \", compressionRatio, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"downloadBtn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Converted Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(FileSelectComponent, \"gX4s8zEHGIknCLatMS7WJnMcJCY=\");\n_c = FileSelectComponent;\nexport default FileSelectComponent;\n/*import React from 'react';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Upload } from 'antd';\r\n\r\nconst App = () => (\r\n  <Upload {...props}>\r\n    <Button icon={<UploadOutlined />}>Upload</Button>\r\n  </Upload>\r\n);\r\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"FileSelectComponent\");","map":{"version":3,"names":["axios","useState","Spin","UploadOutlined","Button","Upload","jsxDEV","_jsxDEV","FileSelectComponent","addRecord","_s","file","setFile","downloadLink","setDownloadLink","compressionRatio","setCompressionRatio","uploading","setUploading","props","action","onChange","fileList","status","console","log","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","data","compressedFile","outputFileSize","url","fileName","name","inputFileSize","size","toFixed","error","handleDownload","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","type","accept","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/FileSelectComponent.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Spin } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Upload } from \"antd\";\r\n\r\nconst FileSelectComponent = ({ addRecord }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadLink, setDownloadLink] = useState(\"\");\r\n  const [compressionRatio, setCompressionRatio] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const props = {\r\n    action: \"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\",\r\n    onChange({ file, fileList }) {\r\n      if (file.status !== \"uploading\") {\r\n        console.log(file, fileList);\r\n      }\r\n    },\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n\r\n    setUploading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/compress\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"API Response:\", response.data);\r\n\r\n      //const { compressedFile, compressionRatio } = response.data;\r\n\r\n      const { compressedFile, compressionRatio, outputFileSize } =\r\n        response.data;\r\n      const url = `http://localhost:5000/${compressedFile}`;\r\n\r\n      setDownloadLink(url);\r\n      setCompressionRatio(compressionRatio);\r\n      setUploading(false);\r\n\r\n      addRecord({\r\n        fileName: file.name,\r\n        compressionRatio: compressionRatio,\r\n        inputFileSize: (file.size / (1024 * 1024)).toFixed(2),\r\n        outputFileSize: outputFileSize,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (downloadLink) {\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadLink;\r\n      link.download = \"\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      alert(\"No file available to download.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"fileToCompress\">\r\n      <div className=\"custom-file-upload\">\r\n        <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n      </div>\r\n      {/* <div className=\"uploadBtn\">\r\n        <button onClick={handleUpload}>\r\n         {uploading ? \"Uploading...\" : \"Convert\"} \r\n        </button>\r\n\r\n      </div> */}\r\n      <div className=\"uploadBtn\">\r\n        {uploading ? (\r\n          <Upload {...props}></Upload>\r\n        ) : (\r\n          <button onClick={handleUpload}>\"Convert\"</button>\r\n        )}\r\n      </div>\r\n      <div className=\"compRat\">\r\n        {compressionRatio && (\r\n          <div className=\"ratio\">\r\n            <p>Compression Ratio: {compressionRatio}%</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {downloadLink && (\r\n        <div className=\"downloadBtn\">\r\n          <button onClick={handleDownload}>Download Converted Audio</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileSelectComponent;\r\n/*import React from 'react';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Upload } from 'antd';\r\n\r\nconst App = () => (\r\n  <Upload {...props}>\r\n    <Button icon={<UploadOutlined />}>Upload</Button>\r\n  </Upload>\r\n);\r\nexport default App;*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}