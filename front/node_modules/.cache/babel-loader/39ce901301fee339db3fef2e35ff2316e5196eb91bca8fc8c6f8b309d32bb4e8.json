{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomski\\\\aplikacija\\\\front\\\\src\\\\components\\\\Convert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Convert = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLinkCon, setDownloadLinkCon] = useState(\"\");\n  const [compressionRatioCon, setCompressionRatioCon] = useState(\"\");\n  const [converting, setConverting] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleConvert = async () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    setConverting(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/convert\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const {\n        convertedFile,\n        compressionRatioCon\n      } = response.data;\n      const url = `http://localhost:5000/converted/${convertedFile}`;\n      setDownloadLinkCon(url);\n      setCompressionRatioCon(compressionRatioCon);\n      setConverting(false);\n    } catch (error) {\n      console.error(\"Error converting file:\", error);\n      setConverting(false);\n    }\n  };\n  const handleDownload = () => {\n    const link = document.createElement(\"a\");\n    link.href = downloadLink;\n    link.download = \"convert_audio.m4a\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title1\",\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-file-upload\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConvert,\n        children: converting ? \"Uploading...\" : \"Upload and Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), compressionRatioCon && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Compression Ratio: \", compressionRatioCon, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), downloadLinkCon && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Converted Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Convert, \"V1Tu5qYpy4O/ltNWv0Sos3Kg0kA=\");\n_c = Convert;\nexport default Convert;\nvar _c;\n$RefreshReg$(_c, \"Convert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Convert","_s","file","setFile","downloadLinkCon","setDownloadLinkCon","compressionRatioCon","setCompressionRatioCon","converting","setConverting","handleFileChange","e","target","files","handleConvert","alert","formData","FormData","append","response","post","headers","convertedFile","data","url","error","console","handleDownload","link","document","createElement","href","downloadLink","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Diplomski/aplikacija/front/src/components/Convert.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nconst Convert = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const [downloadLinkCon, setDownloadLinkCon] = useState(\"\");\r\n\r\n  const [compressionRatioCon, setCompressionRatioCon] = useState(\"\");\r\n\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n\r\n    setConverting(true);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/convert\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const { convertedFile, compressionRatioCon } = response.data;\r\n      const url = `http://localhost:5000/converted/${convertedFile}`;\r\n\r\n      setDownloadLinkCon(url);\r\n      setCompressionRatioCon(compressionRatioCon);\r\n      setConverting(false);\r\n    } catch (error) {\r\n      console.error(\"Error converting file:\", error);\r\n      setConverting(false);\r\n    }\r\n  };\r\n  const handleDownload = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = downloadLink;\r\n    link.download = \"convert_audio.m4a\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"title1\">Convert</div>\r\n      <div>\r\n        <div className=\"custom-file-upload\">\r\n          <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n        </div>\r\n\r\n        <button onClick={handleConvert}>\r\n          {converting ? \"Uploading...\" : \"Upload and Convert\"}\r\n        </button>\r\n      </div>\r\n      {compressionRatioCon && (\r\n        <div>\r\n          <p>Compression Ratio: {compressionRatioCon}%</p>\r\n        </div>\r\n      )}\r\n      {downloadLinkCon && (\r\n        <div>\r\n          <button onClick={handleDownload}>Download Converted Audio</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Convert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}